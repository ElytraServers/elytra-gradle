plugins {
    id 'java'
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group = 'cn.taskeren'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withJavadocJar()
    withSourcesJar()
}

gradlePlugin {
    plugins {
        create("elytra") {
            id = "com.github.ElytraServers.elytra-gradle"
            implementationClass = "cn.elytra.gradle.ElytraGradlePlugin"
        }
    }
}

import org.gradle.util.GradleVersion

tasks.register("downloadGradleSources") {
    doLast {
        def gradleApiFile = project.configurations.detachedConfiguration(dependencies.gradleApi()).files.stream()
        .filter {
            it.name.startsWith("gradle-api")
        }.findFirst().orElseThrow()

        def gradleApiSources = new File(gradleApiFile.absolutePath.replace(".jar", "-sources.jar"))
        def url = "https://services.gradle.org/distributions/gradle-${GradleVersion.current().getVersion()}-src.zip"

        gradleApiSources.delete()

        println("Downloading (${url}) to (${gradleApiSources})")
        gradleApiSources << new URL(url).newInputStream()
    }
}
